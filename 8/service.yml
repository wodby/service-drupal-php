name: drupal8-php
type: service
title: PHP (Drupal 8)
hostname: php
labels:
- php
- php-fpm
- drupal
- drupal8
deployment:
- type: git
options:
- version: 7.4
- version: 7.3
  stability_tag: 4.13.12
  default: true
  deployment:
  - type: image
    title: Vanilla Drupal
    image: wodby/drupal:8-7.3-4.16.4
- version: 7.1
  stability_tag: 4.13.12
  eol: '2019-11-30T00:00:00+00:00'
# scalable is false by default.
scalable: true
containers:
- name: php
  image: wodby/drupal-php
  # if main not specified the first port becomes main.
  main: true
  env:
  # remapping of existing env var.
  - name: 'PHP_NEWRELIC_LICENSE'
    value: '{{env.NEWRELIC_LICENSE}}'
  - name: PHP_NEWRELIC_APPNAME
    value: '{{wodby_app_name}}'
  # will be available.
  # - name: VARNISH_ADMIN_PORT
  ports:
  - name: fpm
    number: 9000
    # if missing, the first port of the main container considered as main.
    main: true
    type: tcp

derivatives:
- name: ssh
  title: SSH
  command: sudo /usr/sbin/sshd -De
  ssh: true
  env:
  - name: TEST_SSH
    value: val123

links:
- name: db
  title: DBMS
  required: true
  selectors:
  - type: db
    labels:
    - mariadb
  - type: db
    labels:
    - postgres
- name: cache-storage
  title: Cache storage
  selectors:
  - type: db
    labels:
    - redis
  - type: cache-storage
    labels:
    - memcached    
- name: varnish
  title: Varnish
  selectors:
  - type: reverse-proxy
    labels:
    - varnish

storages:
- name: files
  title: Files storage
  type: shared
  size: 10

integrations:
- name: backup-destination
  title: Backups destination
  type: s3-compat
  required: false
  jobsOnly: true

configurations:
- name: docroot
  title: Drupal root subdir
  description: 'Composer-based projects have "web" by default' 
  default: web
  var: DOCROOT_SUBDIR
- name: sitedir
  title: Drupal site dir
  required: true
  default: default
  var: DRUPAL_SITE  
  
imports:
- name: files
  title: Drupal files import
  sources:
  - type: url
    command: ["make", "files-import", "[source]"]
  - type: archive
    command: ["make", "files-import", "[source]"]
    extensions:
    - tar
    - tar.gz
    - tgz
    - zip
    
backups:
  command: ["make", "backup"]
  integrations:
  - backup-destination
  params:
  - name: storageSizeFrom
    value: files

# todo: 
# - post-deployment scripts
# - drush aliases
