name: drupal8-php
type: service
title: PHP (Drupal 8)
hostname: php
labels:
- php
- php-fpm
- drupal
- drupal8
options:
- version: 7.4
- version: 7.3
  stability_tag: 4.13.12
  default: true
- version: 7.1
  stability_tag: 4.13.12
  eol: '2019-11-30T00:00:00+00:00'
# scalable is false by default.
scalable: true
containers:
- name: php
  image: wodby/drupal-php
  # if main not specified the first port becomes main.
  main: true
  resources:
    request:
      memory: 16  
  env:
  # remapping of existing env var.
  - name: 'PHP_NEWRELIC_LICENSE'
    value: '{{env.NEWRELIC_LICENSE}}'
  - name: PHP_NEWRELIC_APPNAME
    value: '{{wodby_app_name}}'
  - name: DRUPAL_FILES_SYNC_SALT
    value: '{{sync_salt}}'
    secret: true
  - name: DRUPAL_HASH_SALT
    value: '{{hash_salt}}'  
    secret: true
  - name: DRUPAL_VERSION
    value: 8
  - name: PHP_FPM_ENV_VARS
    value: '["WODBY_APP_NAME","WODBY_APP_INSTANCE_NAME","WODBY_ENVIRONMENT_NAME","WODBY_ENVIRONMENT_TYPE","WODBY_BUILD_NUMBER"]'
  - name: PHP_ERROR_REPORTING
    value: 'E_ALL & ~E_DEPRECATED & ~E_STRICT'
    env: prod
  - name: PHP_DISPLAY_ERRORS
    value: 'Off'
    env: prod    
  - name: PHP_DISPLAY_STARTUP_ERRORS
    value: 'Off'
    env: prod    
  - name: PHP_TRACK_ERRORS
    value: 'Off'
    env: prod   
  - name: DB_HOST
    value: '{{links.db.host}}'
  - name: DB_USER
    value: '{{links.db.env.DB_USER}}'
  - name: DB_NAME
    value: '{{links.db.env.DB_NAME}}'    
  - name: DB_PASSWORD
    value: '{{links.db.env.DB_PASSWORD}}'    
    secret: true    
  - name: DB_DRIVER
    value: '{{links.db.env.DB_DRIVER}}'
  - name: REDIS_HOST
    value: '{{links.redis.host}}'
  - name: REDIS_PASSWORD
    value: '{{links.redis.tokens.password}}'    
    secret: true    
  ports:
  - name: fpm
    number: 9000
    # if missing, the first port of the main container considered as main.
    main: true
    type: tcp

build:
  sources:
  - name: vanilla
    title: Vanilla Drupal
    repo: https://github.com/wodby/drupal-vanilla
  - name: git
    title: From my repository
  dockerfile: Dockerfile

derivatives:
- name: sshd
  title: SSHD
  args: ['sudo', '/usr/sbin/sshd', '-De']
  type: ssh
  default: true
  required: false
  ports:
  - name: sshd
    main: true
    number: 80
    type: tcp
  # for remote xdebug.
  - name: fpm
    number: 9000
    type: tcp    
  resources:
    request:
      memory: 16
    limit:
      memory: 512  
  env:
  - name: SSHD_GATEWAY_PORTS
    value: clientspecified
  - name: DEBUG
    value: 1   
    
cron:
- name: drush
  command: ['drush', '-r', '${HTTP_ROOT}', '-l', '${WODBY_URL_PRIMARY}', 'cron']
  period: 22 * * * * 

links:
- name: db
  title: DBMS
  required: true
  selectors:
  - type: db
    labels:
    - mariadb
  - type: db
    labels:
    - postgres
- name: redis
  title: Redis
  selectors:
  - type: db
    labels:
    - redis
- name: varnish
  title: Varnish
  selectors:
  - type: proxy
    labels:
    - varnish

volumes:
- name: files
  title: Files
  shared: true
  path: /mnt/files
  size: 10

integrations:
- name: backup-destination
  title: Backups destination
  type: storage
  required: false
  jobsOnly: true

settings:
- name: docroot
  title: Drupal root subdirectory
  description: Composer-based projects have Drupal under 'web' directory by default
  placeholder: path/relative/to/git/root
  default: web
  var: DOCROOT_SUBDIR
- name: sitedir
  title: Drupal site dir
  required: true
  default: default
  var: DRUPAL_SITE  
  
imports:
- name: files
  title: Drupal files import
  sources:
  - type: url
    args:
    - make
    - files-import
    - '{{wodby_import_source}}'
  - type: archive
    args:
    - make
    - files-import
    - '{{wodby_import_source}}'
    extensions:
    - tar
    - tar.gz
    - tgz
    - zip
    
env:
- name: WODBY_APP_NAME
  value: '{{wodby_app_name}}'

tokens:
- name: sync_salt
  generate:
    regex: '[0-9a-z]{32}'
- name: hash_salt
  generate:
    regex: '[0-9a-z]{32}'

backups:
- name: files
  title: Files backup
  upload:
    dir: /mnt/files
    gzip: false
  integrations:
  - backup-destination

